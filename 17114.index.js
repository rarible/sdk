"use strict";(self.webpackChunkexample=self.webpackChunkexample||[]).push([[17114],{26033:(e,t,a)=>{a.d(t,{DG:()=>n,Y4:()=>o,dw:()=>s});const n="0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee";function s(e){return e.toLowerCase()===n}const o="0x0000000000000000000000000000000000000000"},17114:(e,t,a)=>{a.d(t,{relayBiconomyTransaction:()=>w});var n=a(58470),s=a(26033),o=a(12506),r=a(75385),i=a(92717),c=a(72559),d=a(18333);const h=0n;async function w(e){const[t,a]=await async function({account:e,serializableTransaction:t,transaction:a,gasless:r}){const c=(0,o.P)({address:r.relayerForwarderAddress,chain:a.chain,client:a.client}),w=await(0,d.readContract)({contract:c,method:"function getNonce(address,uint256) view returns (uint256)",params:[e.address,h]}),p=Math.floor(Date.now()/1e3)+(r.deadlineSeconds??3600),u={from:e.address,to:t.to,token:s.Y4,txGas:t.gas,tokenGasPrice:0n,batchId:h,batchNonce:w,deadline:p,data:t.data};if(!u.to)throw new Error("Cannot send a transaction without a `to` address");if(!u.txGas)throw new Error("Cannot send a transaction without a `gas` value");if(!u.data)throw new Error("Cannot send a transaction without a `data` value");const l=(0,n.h)([{type:"address"},{type:"address"},{type:"address"},{type:"uint256"},{type:"uint256"},{type:"uint256"},{type:"uint256"},{type:"bytes32"}],[u.from,u.to,u.token,u.txGas,u.tokenGasPrice,u.batchId,u.batchNonce,(0,i.S)(u.data)]);return[u,await e.signMessage({message:l})]}(e),w=await fetch("https://api.biconomy.io/api/v2/meta-tx/native",{method:"POST",body:(0,c.A)({apiId:e.gasless.apiId,params:[t,a],from:t.from,to:t.to,gasLimit:t.txGas}),headers:{"x-api-key":e.gasless.apiKey,"Content-Type":"application/json;charset=utf-8"}});if(!w.ok)throw w.body?.cancel(),new Error(`Failed to send transaction: ${await w.text()}`);const p=await w.json(),u=p.txHash;if((0,r.q)(u))return{transactionHash:u,chain:e.transaction.chain,client:e.transaction.client};throw new Error(`Failed to send transaction: ${(0,c.A)(p)}`)}}}]);