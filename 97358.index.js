"use strict";(self.webpackChunkexample=self.webpackChunkexample||[]).push([[97358],{97358:(e,t,r)=>{r.d(t,{upload:()=>g});var n=r(93876),i=r(72559),a=r(65176);const o="[object Uint8Array]";function f(e){if(!s(e))throw new TypeError(`Expected \`Uint8Array\`, got \`${typeof e}\``)}function s(e){return!!e&&(e.constructor===Uint8Array||Object.prototype.toString.call(e)===o)}function l(e,t){if(f(e),f(t),e===t)return!0;if(e.length!==t.length)return!1;for(let r=0;r<e.length;r++)if(e[r]!==t[r])return!1;return!0}var u=r(4364);function c(e){return globalThis.File&&e instanceof File}function p(e){return!!e&&!!(0,a.C)(e,["data","name"])&&!("string"!=typeof e.name||"string"!=typeof e.data&&!s(e.data))}function m(e,t){if(c(e)&&c(t)){if(e.name===t.name&&e.lastModified===t.lastModified&&e.size===t.size)return!0}else{if(s(e)&&s(t))return l(e,t);if(p(e)&&p(t)&&e.name===t.name){if("string"==typeof e.data&&"string"==typeof t.data)return e.data===t.data;if(s(e.data)&&s(t.data))return l(e.data,t.data)}}return!1}function d(e){return c(e)||s(e)||p(e)}function y(e,t=[]){if(d(e))return t.push(e),t;if("object"==typeof e){if(!e)return t;if(Array.isArray(e))for(const r of e)y(r,t);else Object.keys(e).map((r=>y(e[r],t)))}return t}function h(e,t){if(d(e)){if(t.length)return t.shift();u.warn("Not enough URIs to replace all files in object.")}return"object"==typeof e&&e?Array.isArray(e)?e.map((e=>h(e,t))):Object.fromEntries(Object.entries(e).map((([e,r])=>[e,h(r,t)]))):e}function b(e){return"string"==typeof e?(t=e).includes("/ipfs/")?`ipfs://${t.split("/ipfs/")[1]}`:t:"object"==typeof e&&e?d(e)?e:Array.isArray(e)?e.map((e=>b(e))):Object.fromEntries(Object.entries(e).map((([e,t])=>[e,b(t)]))):e;var t}async function g(e){if(0===e.files.length)return null;let t;if(e.files.map((e=>d(e)||"string"==typeof e)).every((e=>!!e)))t=e.files;else{let r=e.files;r=b(r);const n=y(r);if(n.length){const t=await g({...e,files:n});r=h(r,Array.isArray(t)?t:[t])}t=r.map((e=>"string"==typeof e?e:(0,i.A)(e)))}const a=new FormData,{fileNames:o,form:f}=function(e,t,r){const n=new Map,i=[];for(let a=0;a<t.length;a++){const o=t[a];let f="",s=o;if(c(o))if(r?.rewriteFileNames){let e="";if(o.name){const t=o.name.lastIndexOf(".");t>-1&&(e=o.name.substring(t))}f=`${a+r.rewriteFileNames.fileStartNumber}${e}`}else f=`${o.name}`;else p(o)?(s=o.data,f=r?.rewriteFileNames?`${a+r.rewriteFileNames.fileStartNumber}`:`${o.name}`):f=r?.rewriteFileNames?`${a+r.rewriteFileNames.fileStartNumber}`:`${a}`;const l=r?.uploadWithoutDirectory?"files":`files/${f}`;if(n.has(f)){if(m(n.get(f),o)){i.push(f);continue}throw new Error(`[DUPLICATE_FILE_NAME_ERROR] File name ${f} was passed for more than one different file.`)}n.set(f,o),i.push(f),e.append("file",new Blob([s]),l)}const a={name:"Storage SDK",keyvalues:{...r?.metadata}};return e.append("pinataMetadata",JSON.stringify(a)),r?.uploadWithoutDirectory&&e.append("pinataOptions",JSON.stringify({wrapWithDirectory:!1})),{form:e,fileNames:i.map((e=>encodeURIComponent(e)))}}(a,t,e),s=(0,n.l)();if("browser"===s||"node"===s){const{uploadBatch:t}=await r.e(68402).then(r.bind(r,68402)),n=await t(e.client,f,o,e);return 1===e.files.length?n[0]:n}throw new Error("Please, use the uploadMobile function in mobile environments.")}},65176:(e,t,r)=>{function n(e,t=[]){return function(e){return"object"==typeof e&&null!==e}(e)&&t.every((t=>t in e))}r.d(t,{C:()=>n})}}]);